http://6bgeke4fcy4hbuo7tpn74pblhaxeqfyqkyqa3ddw6vwdv3ouocz7vwid.onion/


// const helmet = require('helmet');

// app.use(helmet({
//     hsts: false, //for testing
//     contentSecurityPolicy: {
//         directives: {
//             defaultSrc: ["'self'", "data:"],
//             scriptSrc: ["'self'", "http://6bgeke4fcy4hbuo7tpn74pblhaxeqfyqkyqa3ddw6vwdv3ouocz7vwid.onion/libs/purify.min.js", "'unsafe-inline'"],
//             styleSrc: ["'self'", "'unsafe-inline'", "http://6bgeke4fcy4hbuo7tpn74pblhaxeqfyqkyqa3ddw6vwdv3ouocz7vwid.onion/style1.css", "http://fonts.gstatic.com", "http://fonts.googleapis.com"],
//             fontSrc: ["'self'", "http://fonts.gstatic.com"],
//             imgSrc: ["*"],
//             upgradeInsecureRequests: [],
//             blockAllMixedContent: true,
//             // Ensure upgrade-insecure-requests is NOT included
//         },
//     },
//     referrerPolicy: { policy: "no-referrer" },
// }));

const wss = new WebSocket.Server({ 
    verifyClient: (info, callback) => {
        const origin = info.origin;
        console.log(`WebSocket connection attempt from origin: ${origin}`);
        // Allow connections from defined origins or any .onion addresses
        if (allowedOrigins.includes(origin) || origin.endsWith('.onion')) {
            callback(true); // Accept the connection
            console.log('WebSocket connection accepted');
        } else {
            callback(false, 401, 'Unauthorized'); // Reject the connection
            console.log('WebSocket connection rejected: Unauthorized origin');
        }
    }
});

const socket = new WebSocket('ws://localhost:3000');
